<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.codehustler</groupId>
	<artifactId>spring-security-3-legged-oauth-1.0</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>
	<name>Spring Security 3-Legged OAuth 1.0</name>

	<organization>
		<name>CodeHustler</name>
		<url>http://codehustler.org</url>
	</organization>

	<developers>
		<developer>
			<id>agiannone</id>
			<name>Alessandro Giannone</name>
			<organization>CodeHustler</organization>
		</developer>
	</developers>

	<modules>
		<module>spring-security-3-legged-oauth-1.0-provider</module>
		<module>spring-security-3-legged-oauth-1.0-consumer</module>
	</modules>

	<!-- Maven properties -->

	<properties>

		<!-- General Project Properties -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>

		<!-- SSL Certificate to run HTTPS -->

		<shared.ssl.file>${project.build.directory}/shared/ssl.keystore</shared.ssl.file>

		<!-- Plugin and Dependency Versions -->

		<spring.security.oauth.version>1.0.5.RELEASE</spring.security.oauth.version>
		<spring.security.version>3.1.0.RELEASE</spring.security.version>
		<spring.version>3.1.2.RELEASE</spring.version>
		<logback.version>1.0.13</logback.version>
		<servlet.version>3.0.1</servlet.version>
		<jersey.version>1.18.1</jersey.version>
		<slf4j.version>1.7.5</slf4j.version>
		<jaxb.version>2.2.4-1</jaxb.version>
		<jstl.version>1.2</jstl.version>
		<jsp.version>2.2</jsp.version>

		<plugin.lifecycle.version>1.0.0</plugin.lifecycle.version>
		<plugin.compiler.version>2.3.2</plugin.compiler.version>
		<plugin.keytool.version>1.3</plugin.keytool.version>
		<plugin.tomcat7.version>2.1</plugin.tomcat7.version>
		<plugin.clean.version>2.5</plugin.clean.version>
		<plugin.war.version>2.4</plugin.war.version>

	</properties>

	<!-- Maven dependencies -->

	<dependencies>

			<!-- Logging Libraries -->

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

		<!-- Servlet API -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
			<version>${jstl.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jsp-api</artifactId>
					<groupId>javax.servlet.jsp</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jstl-api</artifactId>
					<groupId>javax.servlet.jsp.jstl</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- REST -->

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>${jaxb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>spring-aop</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-web</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-core</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-beans</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-context</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Spring -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Security -->

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<!-- Spring Security for OAuth 1.0a -->

		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth</artifactId>
			<version>${spring.security.oauth.version}</version>
		</dependency>

	</dependencies>

	<!-- Additional Repositories (Needed for Javax dependencies) -->

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>

	<!-- Default build instructions -->

	<build>
		<pluginManagement>
			<plugins>

				<!--lifecycle-mapping configuration is used to store Eclipse m2e settings -->
				<!-- It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${plugin.lifecycle.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>keytool-maven-plugin</artifactId>
										<versionRange>[${plugin.keytool.version},)</versionRange>
										<goals>
											<goal>clean</goal>
											<goal>generateKeyPair</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- Standard Maven Plugins -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${plugin.clean.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${plugin.compiler.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${plugin.war.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>${plugin.tomcat7.version}</version>
					<configuration>
						<port>${tomcat.http.port}</port>
						<httpsPort>${tomcat.https.port}</httpsPort>
						<keystoreFile>${shared.ssl.file}</keystoreFile>
						<keystorePass>startkit</keystorePass>
						<path>${tomcat.context}</path>
						<fork>false</fork>
						<username>${tomcat.username}</username>
						<password>${tomcat.password}</password>
						<url>${tomcat.url}</url>
					</configuration>
				</plugin>

				<!-- This plugin generates a Java Keystore for use with SSL -->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>keytool-maven-plugin</artifactId>
					<version>${plugin.keytool.version}</version>
					<executions>
						<execution>
							<id>clean-ssl-keys</id>
							<phase>initialize</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
						<execution>
							<id>generate-ssl-keys</id>
							<phase>initialize</phase>
							<goals>
								<goal>generateKeyPair</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<keystore>${shared.ssl.file}</keystore>
						<dname>cn=localhost</dname>
						<keypass>startkit</keypass>
						<storepass>startkit</storepass>
						<alias>tomcat</alias>
						<keyalg>RSA</keyalg>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>