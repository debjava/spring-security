<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- <context:component-scan base-package="com.ddlab.spring.rest.resources"/> -->
	<context:component-scan
		base-package="com.ddlab.spring.rest.resources, com.ddlab.spring.rest" />

	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

	<!-- SPRING SECURITY SETUP -->

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>

	<security:authentication-manager id="authenticationManager">
		<!-- <security:authentication-provider user-service-ref="userDao"> -->
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="user"
					authorities="ROLE_USER" />
				<security:user name="piku" password="piku"
					authorities="ROLE_USER" />
				<security:user name="deba" password="deba"
					authorities="ROLE_ADMIN" />
			</security:user-service>
			<!-- <security:password-encoder ref="passwordEncoder"></security:password-encoder> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"> 
		<constructor-arg ref="securityContextLogoutHandler" /> <constructor-arg ref="simpleUrlLogoutSuccessHandler" 
		/> </bean> <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" 
		/> <bean id="simpleUrlLogoutSuccessHandler" class="com.ddlab.spring.rest.security.CustomLogoutFilter" 
		p:defaultTargetUrl="/rest/user/logout" /> -->

	<bean id="logoutHandler"
		class="com.ddlab.spring.rest.security.CustomLogoutSuccessHandler" />
		
		
		
		
		

	<!-- <bean id="securityContextLogoutHandler"
		class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" /> -->
		
	<!-- <bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<property name="filterProcessesUrl" value="/logout" />
		<constructor-arg index="0" value="/logoutSuccess" />
		<constructor-arg index="1">
			<list>
				<ref bean="logoutHandler" />
				ref bean="myLogoutHandler"/
			</list>
		</constructor-arg>
	</bean> -->
	
	<!-- <bean id="restLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg>
        <bean  class="com.ddlab.spring.rest.security.CustomLogoutSuccessHandler" />
    </constructor-arg>
    <constructor-arg>
        <list>
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </list>
    </constructor-arg>
    
</bean> -->










	

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">
		
		
		
		
		
		<!-- <security:logout logout-url="/rest/user/logout" success-handler-ref="logoutHandler" /> -->


		<!-- <security:intercept-url pattern="/logout" access="permitAll" /> <security:logout 
			logout-url="/rest/user/logout" logout-success-url="/logoutSuccess" /> -->

		<!-- <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER" /> -->

		<!-- <security:logout logout-url="/rest/user/logout"/> -->


		<security:logout logout-url="/rest/user/logout" success-handler-ref="logoutHandler" 
			invalidate-session="true"/>


		<!-- <security:logout success-handler-ref=""/> -->


		<!-- <security:logout invalidate-session="true" logout-url="/rest/user/authenticate" /> -->

		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />
			
			<!-- <security:custom-filter position="LOGOUT_FILTER" ref="restLogoutFilter" /> -->

		<!-- <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER" /> -->


		<security:intercept-url pattern="/rest/user/authenticate"
			access="permitAll" />

		<security:intercept-url pattern="/rest/myresource/**"
			access="isAuthenticated()" />

	</security:http>

	<bean id="unauthorizedEntryPoint" class="com.ddlab.spring.rest.security.UnauthorizedEntryPoint" />

	<bean id="authenticationTokenProcessingFilter"
		class="com.ddlab.spring.rest.security.AuthenticationTokenProcessingFilter">
		<!-- <constructor-arg ref="userDao" /> -->
	</bean>

</beans>