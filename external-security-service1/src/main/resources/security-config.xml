<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:component-scan base-package="com.ddlab.rnd.security" />

	<bean id="logoutHandler"
		class="com.ddlab.rnd.security.token.services.CustomLogoutSuccessHandler" />

	<!-- SPRING SECURITY SETUP -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>

	<bean id="unauthorizedEntryPoint"
		class="com.ddlab.rnd.security.token.services.UnauthorizedEntryPoint" />

	<bean id="authenticationTokenProcessingFilter"
		class="com.ddlab.rnd.security.token.services.AuthenticationTokenProcessingFilter">
		<!-- <constructor-arg ref="userDao" /> -->
	</bean>

	<security:authentication-manager id="authenticationManager">
		<!-- <security:authentication-provider user-service-ref="userDao"> -->
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="user"
					authorities="ROLE_USER" />
				<security:user name="piku" password="piku"
					authorities="ROLE_USER" />
				<security:user name="deba" password="deba"
					authorities="ROLE_ADMIN" />
			</security:user-service>
			<!-- <security:password-encoder ref="passwordEncoder"></security:password-encoder> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http realm="Protected API" use-expressions="true"
		auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager">

		<security:logout logout-url="/api/1/bankingservices/logout"
			success-handler-ref="logoutHandler" invalidate-session="true" />

		<security:custom-filter ref="authenticationTokenProcessingFilter"
			position="FORM_LOGIN_FILTER" />

		<!-- <security:intercept-url pattern="/api/1/bankingservices/authenticate"
			access="permitAll" /> -->
			
		<security:intercept-url pattern="/**/authenticate"
			access="permitAll" />	

		<!-- <security:intercept-url pattern="/api/1/bankingservices/**"
			access="isAuthenticated()" /> -->
			
		<security:intercept-url pattern="/api/**"
			access="isAuthenticated()" />	

	</security:http>

</beans>